Para validar se todas as colunas de um dataset têm os nomes esperados e estão na ordem correta utilizando o pacote `great_expectations`, você pode definir um expectation de tipo `expect_column_values_to_match_ordered_set` no objeto `DataSet` correspondente ao seu arquivo CSV. Veja um exemplo:

python
import great_expectations as ge

# Define o nome do arquivo e a localização do mesmo
arquivo = "caminho/para/o/arquivo.csv"

# Cria um objeto DataSet a partir do arquivo
dataset = ge.read_csv(arquivo)

# Define o nome das colunas esperado e verifica se estão na ordem correta
colunas_esperadas = ["coluna_1", "coluna_2", "coluna_3"]
expectation = dataset.expect_column_values_to_match_ordered_set(column="col", 
                                                    value_set=colunas_esperadas)

# Executa a validação e exibe o resultado
result = dataset.validate(expectations=[expectation], catch_exceptions=False)
print(result)


O código acima define a variável `colunas_esperadas` com uma lista contendo os nomes
 das colunas esperadas, na ordem desejada. 
Em seguida, cria um objeto `DataSet` a partir do arquivo e define um expectation 
utilizando o método `expect_column_values_to_match_ordered_set()`. Esse método verifica 
se os valores da coluna especificada (`column="col"`) correspondem ao conjunto de valores
 esperados (`value_set=colunas_esperadas`), na ordem definida. 

Por fim, o código executa a validação utilizando o método `validate()` e exibe 
o resultado na tela através da função `print()`. O resultado será um dicionário
 contendo informações sobre a validação, incluindo o status ("success" ou "failure") e
  uma lista de erros (caso ocorram). Se as colunas estiverem na ordem correta e 
  com os nomes esperados, o resultado será um status "success" e uma lista vazia
   de erros. Caso contrário, o resultado será um status "failure" e uma lista de
    erros indicando quais colunas estão fora de ordem ou com nomes diferentes.